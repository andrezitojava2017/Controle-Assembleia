/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.tipo_entradas_control;
import Control.tipo_saidas_control;
import Model.tipo_entrada_model;
import Model.tipo_saida_model;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andre
 */
public class form_cad_tipos extends javax.swing.JDialog {

    // atributo armazena o valor do id do tipo selecionado na tabela 
    // exibida no formulario
    private int id_tipo_reg = 0;

    /**
     * Creates new form form_cad_tipos
     */
    public form_cad_tipos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * Carrega os tipos de SAIDAS ou ENTRADAS cadastradas nas tabelas
     *
     * @param tabela_selecionada
     */
    private void carregarTiposSelecionado(String tabela_selecionada) {

        DefaultTableModel tabela = (DefaultTableModel) tbl_tipos.getModel();
        tabela.setNumRows(0);

        // verifica qual tabela foi escolhida pelo usuario
        if (tabela_selecionada.equalsIgnoreCase("saida")) {

            // recupera a lista de tipos cdastradas pelo usuario
            tipo_saidas_control lerSaida = new tipo_saidas_control();
            List<tipo_saida_model> listaSaidas = lerSaida.recuperaListaTipoSaidas();

            // preeche a tabela
            for (tipo_saida_model listaSaida : listaSaidas) {

                tabela.addRow(new Object[]{
                    listaSaida.getId_saida(),
                    listaSaida.getTipo_saida()
                });
            }

        } else if (tabela_selecionada.equalsIgnoreCase("entrada")) {
            // recupera a lista tipos de entradas cadastradas pelo usuario
            tipo_entradas_control lerEntradas = new tipo_entradas_control();
            List<tipo_entrada_model> listaEntradas = lerEntradas.recuperarTiposEntradas();

            for (tipo_entrada_model listaEntrada : listaEntradas) {

                tabela.addRow(new Object[]{
                    listaEntrada.getId(),
                    listaEntrada.getDescricao()
                });
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combo_tabela = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        campo_descricao = new javax.swing.JTextField();
        btn_salvar = new javax.swing.JButton();
        btn_salvar_atualizacao = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_tipos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar tipos de entrada e saida");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastrar tipos de lancamentos"));

        jLabel1.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel1.setText("Selecione uma tabela:");

        combo_tabela.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        combo_tabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Entrada", "Saida" }));
        combo_tabela.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_tabelaItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel2.setText("Descrição do tipo:");

        campo_descricao.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N

        btn_salvar.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_salvar_atualizacao.setText("Atualizar");
        btn_salvar_atualizacao.setEnabled(false);
        btn_salvar_atualizacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvar_atualizacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campo_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_tabela, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_salvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_salvar_atualizacao, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combo_tabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_salvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campo_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_salvar_atualizacao))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipos cadastrados"));

        tbl_tipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "codigo", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_tipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_tiposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_tipos);
        if (tbl_tipos.getColumnModel().getColumnCount() > 0) {
            tbl_tipos.getColumnModel().getColumn(0).setMinWidth(50);
            tbl_tipos.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        if (campo_descricao.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Atenção: preencha o campo descrição", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        } else {

            if (combo_tabela.getSelectedItem().toString().equalsIgnoreCase("entrada")) {

                tipo_entradas_control control = new tipo_entradas_control();
                control.inserirNovoTipoEntrada(campo_descricao.getText());
                campo_descricao.setText("");
                combo_tabela.setSelectedIndex(0);

            } else if (combo_tabela.getSelectedItem().toString().equalsIgnoreCase("saida")) {

                tipo_saidas_control control = new tipo_saidas_control();
                control.inserirNovoTipoSaida(campo_descricao.getText());
                campo_descricao.setText("");
                combo_tabela.setSelectedIndex(0);

            }

        }
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void combo_tabelaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_tabelaItemStateChanged
        // TODO add your handling code here:
        carregarTiposSelecionado(combo_tabela.getSelectedItem().toString());
    }//GEN-LAST:event_combo_tabelaItemStateChanged

    private void tbl_tiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_tiposMouseClicked

        int linha = tbl_tipos.getSelectedRow();
        this.id_tipo_reg = (Integer) tbl_tipos.getValueAt(linha, 0);
        String tipo_selecionado = (String) tbl_tipos.getValueAt(linha, 1);

        // Ao selecionar um registro da tabela, ativa-se o btn_salvar_atualização
        if (tbl_tipos.getSelectedRow() != 0) {

            btn_salvar_atualizacao.setEnabled(true);
            campo_descricao.setText(tipo_selecionado);

        } else {

            btn_salvar_atualizacao.setEnabled(false);
            campo_descricao.setText(tipo_selecionado);
        }
    }//GEN-LAST:event_tbl_tiposMouseClicked

    private void btn_salvar_atualizacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvar_atualizacaoActionPerformed
        // atualiza dados da base de dados
        if (combo_tabela.getSelectedItem().toString().equalsIgnoreCase("entrada")) {
            
            tipo_entrada_model tipoEntrada = new tipo_entrada_model();
            tipo_entradas_control atualizar = new tipo_entradas_control();
            tipoEntrada.setId(this.id_tipo_reg);
            tipoEntrada.setDescricao(campo_descricao.getText());
            
            atualizar.atualizarTipoEntrada(tipoEntrada);
            campo_descricao.setText("");
            combo_tabela.setSelectedIndex(0);
            
        } else if (combo_tabela.getSelectedItem().toString().equalsIgnoreCase("saida")) {

            tipo_saida_model tipoSaida = new tipo_saida_model();
            tipoSaida.setId_saida(this.id_tipo_reg);
            tipoSaida.setTipo_saida(campo_descricao.getText());
            
            tipo_saidas_control atualizar = new tipo_saidas_control();
            atualizar.atualizarTipoSaida(tipoSaida);
            campo_descricao.setText("");
            combo_tabela.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btn_salvar_atualizacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_cad_tipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_cad_tipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_cad_tipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_cad_tipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                form_cad_tipos dialog = new form_cad_tipos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_salvar;
    private javax.swing.JButton btn_salvar_atualizacao;
    private javax.swing.JTextField campo_descricao;
    private javax.swing.JComboBox<String> combo_tabela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_tipos;
    // End of variables declaration//GEN-END:variables
}
